---
- name: deploy
  hosts: all

  tasks:
  - name: Ensure deployments-folder exists
    file:
      path: /deployments
      state: directory
      owner: ubuntu
      group: ubuntu
      recurse: yes
    become: yes

  - name: Ensure unzip is installed
    apt:
      name: unzip
    become: yes

  - set_fact:
      timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

  - debug:
      msg: "Beginning deployment /deployments/{{timestamp}}"

  - name: Download master as zip archive
    get_url:
      url: https://github.com/codeclown/eduskunta-data/archive/master.zip
      dest: "/deployments/master.zip"
      force: yes

  - name: Unzip downloaded file
    unarchive:
      src: "/deployments/master.zip"
      remote_src: yes
      dest: "/deployments"

  - name: Rename unzipped folder
    shell: "mv /deployments/eduskunta-data-master /deployments/{{timestamp}}"

  - name: Install dependencies
    yarn:
      path: "/deployments/{{timestamp}}"
      executable: "{{ ansible_env.HOME }}/.nvm/nvm-exec yarn"

  - name: Install systemd service
    template:
      src: ../templates/systemd.j2
      dest: /etc/systemd/system/app.service
    become: yes

  - name: Reload systemd, also stop systemd service
    systemd:
      state: stopped
      enabled: yes
      name: app
      daemon_reload: yes
    become: yes

  - name: Run migrations
    shell: "{{ ansible_env.HOME }}/.nvm/nvm-exec yarn knex migrate:latest"
    args:
      chdir: "/deployments/{{timestamp}}"

  - name: Build assets
    shell: "{{ ansible_env.HOME }}/.nvm/nvm-exec yarn build"
    args:
      chdir: "/deployments/{{timestamp}}"

  - name: Symlink deployment to current
    file:
      src: "/deployments/{{timestamp}}"
      dest: /deployments/current
      state: link

  - name: Configure cron workers
    cron:
      name: "download-data"
      minute: "0"
      hour: "5"
      job: "{{ ansible_env.HOME }}/.nvm/nvm-exec /deployments/current/bin/download-data"

  - name: Start systemd service
    systemd:
      state: started
      name: app
      daemon_reload: yes
    become: yes
